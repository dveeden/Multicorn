CREATE EXTENSION multicorn;
CREATE server multicorn_srv foreign data wrapper multicorn options (
    wrapper 'multicorn.testfdw.TestForeignDataWrapper'
);
CREATE user mapping for postgres server multicorn_srv options (usermapping 'test');
CREATE foreign table testmulticorn (
    test1 character varying,
    test2 character varying
) server multicorn_srv options (
    option1 'option1'
);
insert into testmulticorn(test1, test2) VALUES ('lol', 'lol2');
NOTICE:  {'usermapping': 'test', 'option1': 'option1'}
NOTICE:  {'test1': 'character varying', 'test2': 'character varying'}
ERROR:  Error in python: NotImplementedError
DETAIL:  This FDW does not support the writable API
update testmulticorn set test1 = 'lol';
ERROR:  This FDW does not support the writable API
delete from testmulticorn where test2 = 'lol2';
ERROR:  This FDW does not support the writable API
CREATE foreign table testmulticorn_write (
    test1 character varying,
    test2 character varying
) server multicorn_srv options (
    option1 'option1',
	rowid_column 'test1'
);
insert into testmulticorn_write(test1, test2) VALUES ('lol', 'lol2');
NOTICE:  {'rowid_column': 'test1', 'usermapping': 'test', 'option1': 'option1'}
NOTICE:  {'test1': 'character varying', 'test2': 'character varying'}
NOTICE:  INSERTING: {'test1': u'lol', 'test2': u'lol2'}
update testmulticorn_write set test1 = 'lol';
NOTICE:  []
NOTICE:  set(['test1', 'test2'])
NOTICE:  UPDATING: test1 1 0 with {'test1': u'lol', 'test2': u'test2 2 0'}
NOTICE:  UPDATING: test1 3 1 with {'test1': u'lol', 'test2': u'test2 1 1'}
NOTICE:  UPDATING: test1 2 2 with {'test1': u'lol', 'test2': u'test2 3 2'}
NOTICE:  UPDATING: test1 1 3 with {'test1': u'lol', 'test2': u'test2 2 3'}
NOTICE:  UPDATING: test1 3 4 with {'test1': u'lol', 'test2': u'test2 1 4'}
NOTICE:  UPDATING: test1 2 5 with {'test1': u'lol', 'test2': u'test2 3 5'}
NOTICE:  UPDATING: test1 1 6 with {'test1': u'lol', 'test2': u'test2 2 6'}
NOTICE:  UPDATING: test1 3 7 with {'test1': u'lol', 'test2': u'test2 1 7'}
NOTICE:  UPDATING: test1 2 8 with {'test1': u'lol', 'test2': u'test2 3 8'}
NOTICE:  UPDATING: test1 1 9 with {'test1': u'lol', 'test2': u'test2 2 9'}
NOTICE:  UPDATING: test1 3 10 with {'test1': u'lol', 'test2': u'test2 1 10'}
NOTICE:  UPDATING: test1 2 11 with {'test1': u'lol', 'test2': u'test2 3 11'}
NOTICE:  UPDATING: test1 1 12 with {'test1': u'lol', 'test2': u'test2 2 12'}
NOTICE:  UPDATING: test1 3 13 with {'test1': u'lol', 'test2': u'test2 1 13'}
NOTICE:  UPDATING: test1 2 14 with {'test1': u'lol', 'test2': u'test2 3 14'}
NOTICE:  UPDATING: test1 1 15 with {'test1': u'lol', 'test2': u'test2 2 15'}
NOTICE:  UPDATING: test1 3 16 with {'test1': u'lol', 'test2': u'test2 1 16'}
NOTICE:  UPDATING: test1 2 17 with {'test1': u'lol', 'test2': u'test2 3 17'}
NOTICE:  UPDATING: test1 1 18 with {'test1': u'lol', 'test2': u'test2 2 18'}
NOTICE:  UPDATING: test1 3 19 with {'test1': u'lol', 'test2': u'test2 1 19'}
delete from testmulticorn_write where test2 = 'lol2';
NOTICE:  [test2 = lol2]
NOTICE:  set(['test1', 'test2'])
DROP EXTENSION multicorn cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server multicorn_srv
drop cascades to user mapping for postgres
drop cascades to foreign table testmulticorn
drop cascades to foreign table testmulticorn_write
